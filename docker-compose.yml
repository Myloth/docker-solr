# a docker-compose.yml to start a simple cluster with three ZooKeeper nodes and three Solr nodes.
#
# To use:
#
# mkdir mycluster
# cd mycluster
# curl --output docker-compose.yml https://raw.githubusercontent.com/docker-solr/docker-solr-examples/master/docker-compose/docker-compose.yml
# docker-compose up
#
version: '3.7'
services:
  solr1:
    image: solr:8.7.0
    container_name: solr1
    ports:
      - "8983:8983"
    environment:
      - ZK_HOST=zoo1:2181
    networks:
      - solr
    depends_on:
      - zoo1
    volumes:
      - ./docker/builds/solr/cloud/:/opt/solr/server/solr/cloud
      - ./configsets/:/opt/solr/server/solr/configsets/
      - ./configsets/default/:/opt/solr/server/solr/configsets/_default

  solr2:
    image: solr:8.7.0
    container_name: solr2
    ports:
      - "8984:8983"
    environment:
      - ZK_HOST=zoo1:2181
    networks:
      - solr
    depends_on:
      - zoo1
    volumes:
      - ./docker/builds/solr/cloud/:/opt/solr/server/solr/cloud
      - ./configsets/:/opt/solr/server/solr/configsets/
      - ./configsets/default/:/opt/solr/server/solr/configsets/_default
  zoo1:
    image: zookeeper:3.6.2
    container_name: zoo1
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
      - 7001:7000
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    networks:
      - solr

networks:
  solr: